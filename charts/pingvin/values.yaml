common:
  app:
    servicePort: 80
    containerPort: 3000

  # deployment
  deployment:
    memoryRequest: null
    cpuRequest: null
    memoryLimit: null
    cpuLimit: null
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%

  # container
  image:
    repository:
      name: null
      isPrivate: false
      secretName: null
    name: stonith404/pingvin-share
    tag: v0.15.0
    pullPolicy: Always

  # ingress
  ingress:
    enabled: false
    hostName: pingvin.thoughtless.eu
    tls:
      enabled: true
      secretName: ""
    # For Ingress CRD
    ingressClassName: istio
    # For IngressRoute CRD
    isIngressRoute: true
    entrypoint: websecure
    certResolver: letsencrypt # leave empty if you don't use, tls.enabled must be true and secretName must me empty

      
  # env variables
  variables:
    secret: {}
  #    user: "qjoly"
  #    password: "hugepassword"
    nonSecret: {}
  #    author: qjoly
  #    app: 1

  # horizontal autoscaler
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    avgCpuUtilization: 50

  # startupProbe
  startupProbe:
    enabled: false
    httpGet:
      path: "/"
    periodSeconds: 10
    failureThreshold: 20
    timeoutSeconds: 1

  # readinessProbe
  readinessProbe:
    enabled: true
    httpGet:
      path: "/"
    initialDelaySeconds: 20
    periodSeconds: 30
    failureThreshold: 2
    timeoutSeconds: 3

  # livenessProbe
  livenessProbe:
    enabled: true
    httpGet:
      path: "/"
    initialDelaySeconds: 20
    periodSeconds: 60
    failureThreshold: 1
    timeoutSeconds: 3

  persistence:
    enabled: false
    volumes:
      - name: "data"
        storageClassName: "" # leave empty if you want to use default
        size: "5Gi" 
        pvcClaim: "" # Fill only if you want to use existing pvc
        containerMount: "/opt/app/backend/data/"
      - name: "image"
        storageClassName: "" # leave empty if you want to use default
        size: "2Gi" 
        pvcClaim: "" 
        containerMount: "/opt/app/frontend/public/img"

  tests:
    classicHttp: # default helm test method 
      enabled: true
    curlHostHeader: # curl using ingress.hostName as Host in header
      enabled: false
      path: "/api/ping"
